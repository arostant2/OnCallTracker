import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.ss.usermodel.*;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.ListIterator;

public class OnCallTallyReader {
	
	private static String teacherName;
	private static int weeklyOncalls;
	private static int monthlyOncalls;
	private static ArrayList<Teacher> oncallRoster;
	
	public static ArrayList<Teacher> getOncallRoster(){
		return oncallRoster;
	}
	
	public static void oncallTallyReader(ArrayList<ArrayList<Teacher>> teacherRoster, String fileName) throws InvalidFormatException, IOException {
		
		DataFormatter dataFormatter = new DataFormatter();
		Workbook workbook = WorkbookFactory.create(new File(fileName));
		Sheet sheet = workbook.getSheetAt(0);
		Iterator<Row> rowIterator = sheet.rowIterator();
		Row row = sheet.getRow(1);
		outerloop:

	    while(rowIterator.hasNext()){
	    	
	    	row = rowIterator.next();
	    	Cell cell = row.getCell(1);
	 	    teacherName = dataFormatter.formatCellValue(cell);
	 	    ListIterator<ArrayList<Teacher>> j = teacherRoster.listIterator(0);
	 	     
	 	    while(j.hasNext()) {
	 	     
	 	    	ListIterator<Teacher> i = j.next().listIterator();
		    	
	 	     	while (i.hasNext()) {
	 	     		
		    		 if(i.next().getName().equals(teacherName)) {
		    			 
		    			 cell = row.getCell(30);
		    			 weeklyOncalls = Integer.parseInt(dataFormatter.formatCellValue(cell));
		    			 cell = row.getCell(31);
		    			 monthlyOncalls = Integer.parseInt(dataFormatter.formatCellValue(cell));
		    			 i.previous().setWeeklyOncalls(weeklyOncalls);
		    			 i.next().setMonthlyOncalls(monthlyOncalls);
		    			 oncallRoster.add(i.previous());
		    			 i.next();
		    			 break outerloop;
		    		 }
		    	 } 
	 	     }
	    } 
	}
}
