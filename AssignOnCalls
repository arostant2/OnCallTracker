import java.util.ArrayList;
import java.util.ListIterator;

public class AssignOnCalls {
	
	private static String[] substitutes = new String [5];
	private static ArrayList<Assignment> assignments;
	private static ArrayList<Teacher> todaysOncalls;
	
	public static ArrayList<Assignment> getAssignments() {
		return assignments;
	}
	
	public static void assignOncalls(ArrayList<ArrayList<Teacher>> teacherRoster, ArrayList<Teacher> absentTeachers, ArrayList<Assignment> needOncalls, int monthlyMax, int weeklyMax) {
		
		ListIterator<ArrayList<Teacher>> m = teacherRoster.listIterator(0);
		do {
			ListIterator<Teacher> i = m.next().listIterator(0);
	    	do {
	   	 		ListIterator<Teacher> j = absentTeachers.listIterator(0);
	   	 		do {
	   	 			if(i.next().getName() == j.next().getName()) {
	   	 				i.remove();
	   	 				break;
	   	 			}
	   	 		} while (j.hasNext());
	   	 	} while (i.hasNext());
		}while(m.hasNext()); 
		
		
		ListIterator<Assignment> h = needOncalls.listIterator(0);
	    while(h.hasNext()) {
	    	for(int i =0;i<5;i++) {
	    		if(h.next().getSchedule()[i] == "OC") {
	    			ListIterator<Teacher> l = teacherRoster.get(i).listIterator(0);
	    			while(l.hasNext()) {
	    				if((l.next().getMonthlyOncalls()<monthlyMax) && (l.next().getWeeklyOncalls()<weeklyMax)) {
	    					substitutes[i] = l.previous().getName();
	    					todaysOncalls.add(l.next());
	    					l.remove();
	    				}
	    			}
	    		}
	    		else
	    			substitutes[i] = "No sub needed";
	    	}
	    	h.previous().setSubstitutes(substitutes);
	    	assignments.add(h.next());
	    }
	}
}

