import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.ss.usermodel.*;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;

public class TeacherRosterInput {
	
	private static String name;
	private static String[] schedule = new String[5];
	private static ArrayList<ArrayList<Teacher>> teacherByPeriod = new ArrayList<ArrayList<Teacher>>(4);
	private static ArrayList<Teacher> period1 = new ArrayList<Teacher>();
	private static ArrayList<Teacher> period2 = new ArrayList<Teacher>();
	private static ArrayList<Teacher> period3 = new ArrayList<Teacher>();
	private static ArrayList<Teacher> period4 = new ArrayList<Teacher>();
	private static ArrayList<Teacher> period5 = new ArrayList<Teacher>();
	private static int spare;
	
	public static ArrayList<ArrayList<Teacher>> getTeacherByPeriod() {
		return teacherByPeriod;
	}

	public static void RosterReader(String fileName) throws IOException, InvalidFormatException {

	    Workbook workbook = WorkbookFactory.create(new File(fileName));
	        
	    Sheet sheet = workbook.getSheetAt(0);
	       
	    Iterator<Row> rowIterator = sheet.rowIterator();
	    
	    DataFormatter dataFormatter = new DataFormatter();
	        
	    while (rowIterator.hasNext()) {
	    	
	    	Row row = rowIterator.next();
	    	
	    	Iterator<Cell> cellIterator = row.cellIterator();
	    	
	    	Cell cell = cellIterator.next();
	    	
	    	name = dataFormatter.formatCellValue(cell);
	    	
	    	for(int i=0;i<5;i++) {
			    	
	    		cell = cellIterator.next();
				    
				if (dataFormatter.formatCellValue(cell)== "Spare") {
					spare = i;
	    		}
				schedule[i] = dataFormatter.formatCellValue(cell);
		}
	    	
	    	Teacher newTeacher = new Teacher(name);
	    	
	    	newTeacher.setSchedule(schedule);
			    
	    	switch(spare) {
	    		case 0: period1.add(newTeacher);
	    		case 1: period2.add(newTeacher);
	    		case 2: period3.add(newTeacher);
	    		case 3: period4.add(newTeacher);
	    		case 4: period5.add(newTeacher);
	    	}
	    }
	    teacherByPeriod.add(period1);
	    teacherByPeriod.add(period2);
	    teacherByPeriod.add(period3);
	    teacherByPeriod.add(period4);
	    teacherByPeriod.add(period5);
	 }
	    
}
